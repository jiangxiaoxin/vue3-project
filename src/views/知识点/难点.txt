最重要
vue原理和应用
工程化
ts使用

1. 激光扫码，监听全局的广播，activity，intent，intent-filter，service，然后从收到的结果里再进行解码
2.打印，调用原生插件，文档资料少，自己设计场景测试。

怎么定位纸张？黑标检测，加合适的走纸和回纸距离，

全局插件，不能重复引入或者初始化，会导致事件无法移除。并不是这么做了导致无法移除，应该是场景的uni sdk有问题，移除不了。
放到全局，利用uni的全局事件去调用，当前页面监听有效，其余hide时移除。

一个页里好几个打印，打印完后要更新数据，怎么做？
两种方法：1，组件内部记录当前打印目标，回调时就拿这个目标  2.全局打印里加任务队列，这样可以更细粒度控制打印

加任务队列的话，那打印就不是直接调printLabel方法，而是先压入队列，然后通过事件和状态控制。

3.连接蓝牙打印机

4.js 串口通信，调用电子秤

5.搞了几个组件：tree，tree-select，empty，可合并的table，滚动消息

6.优化长列表：一页几个的翻页，定高的虚拟滚动
7.uni的生命周期，app级的和组件级的
8.在线更新，使用原生plus写
9.uni.canvas 画打印的标签
dsl描述标签
可视化设计标签
10.理解需求，针对原型或者方案设计，完善整个链路

11. 加工程化的设置，eslint，prettier，git-commit
12. h5 和 app 兼容代码
13. 改变工作习惯，
    使用接口文档和工具规范前后端的接口使用，
    前端接口使用ts类型 openapi
    测试，冒烟测试，凡事有回应，有结果，有进展
    分离组件，分离代码
    复杂逻辑一定要写注释，写清楚整个逻辑的设计，变动，考虑的边界情况
    14.帮助设计自动排料和排程，最后前端实现

15.大屏语音播报提醒：警告，新任务，web speech api。chrome 14年就支持了

